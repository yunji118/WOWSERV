package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class BOJ_2075 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		PriorityQueue<Integer> que = new PriorityQueue<>();
		for(int i=0;i<N;i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			/* 방법1: 우선순위 큐에 전부 저장하기 */
//			for(int j=0;j<N;j++) {
//				que.add(Integer.parseInt(st.nextToken()));
//			}
			
			/* 방법2: 슬라이딩 윈도우 알고리즘 사용. 큐에 계속 넣다가 큐에 들어있는 값이 N개가 되면 값을 비교해서 더 큰 값이면 교체하기 */
			for(int j=0;j<N;j++) {
				int num = Integer.parseInt(st.nextToken());
				if (que.size() == N) {
					if (que.peek() < num) {
						que.poll();
						que.add(num);
					}
				}else
					que.add(num);
			}
		}
//		for(int i=0;i<N-1;i++)
//			que.poll();
		System.out.println(que.poll());

	}

}
